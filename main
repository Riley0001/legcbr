local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Teams = game:GetService("Teams")

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

local Aimbot = false
local FOV = 10

local function getClosest()
    local closestPlayer
    local closestDistance = FOV

    for _,v in pairs(Players:GetPlayers()) do
        if v ~= Player and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("Humanoid").Health > 0 then
            local worldPoint = v.Character.Head.Position
            local Vector, onScreen = workspace.CurrentCamera:WorldToScreenPoint(worldPoint)
            local Magnitude = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(Vector.X, Vector.Y)).Magnitude

            if closestDistance > Magnitude and onScreen then
                closestDistance = Magnitude
                closestPlayer = v
            end
        end
    end

    return closestPlayer
end

UserInputService.InputBegan:Connect(function(Input, isTyping)
    if isTyping then return end
    if Input.KeyCode == Enum.KeyCode.T then
        Aimbot = not Aimbot
    end
end)

RunService.RenderStepped:Connect(function()
    local Target = getClosest()

    if Aimbot and Target then
        local Lock = Target.Character:FindFirstChild("Head")

        if Lock then
	        local Vector = workspace.CurrentCamera:WorldToScreenPoint(Lock.Position)
	        local Distance = (Vector2.new(Vector.X, Vector.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
	        local MagnitudeX = Mouse.X - Vector.X
	        local MagnitudeY = Mouse.Y - Vector.Y

	        mousemoverel(-MagnitudeX * 0.5, -MagnitudeY * 0.5)
		end
    end
end)
